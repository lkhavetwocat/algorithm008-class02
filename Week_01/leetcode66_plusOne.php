<?php
/*
 * [66] 加一
 * 给定一个由整数组成的非空数组所表示的非负整数，在该数的基础上加一。
 * 最高位数字存放在数组的首位， 数组中每个元素只存储单个数字。
 * 你可以假设除了整数 0 之外，这个整数不会以零开头。
 * 解题思路：定义一个指针，从数组末尾出发，先将指针所指元素加一
 * 然后对10取余，如果余数不为0则说明所指元素不用进位，直接返回即可
 * 如果余数为0则指针移动判断下一个元素
 * 如果全部判断完了说明数组内表达的数字为999这样的，则直接在数组开头插入元素内容为1，其他元素为0即可
 */

// @lc code=start
class Solution {

    /**
     * @param Integer[] $digits
     * @return Integer[]
     */
    function plusOne($digits) {
        //定义指针开始位置为数组末尾
        $lenth = count($digits) -1;
        //向左移动指针
        for ($i = $lenth; $i >= 0; $i--) { 
            //先将当前指针所指元素+1
            $digits[$i]++;
            //在将加一后的元素对10取余，并重新给自己赋值（两种情况：1，10对10取余为0 2，小于10对10取余为自己）
            $digits[$i] = $digits[$i] % 10;
            //如果加一并取余后还是本身则直接返回该数组
            if ($digits[$i] <> 0) {
                return $digits;
            }
        }
        //数组全部的元素都进行了加一，切都变成了0，则需要在数组开头插入一个1然后返回
        array_unshift($digits, 1);
        return $digits;
    }
}
